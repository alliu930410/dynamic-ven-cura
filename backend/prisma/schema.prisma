// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  dynamicUserId String @unique

  custodialWallets CustodialWallet[]
}

model CustodialWallet {
  id Int @id @default(autoincrement())
  address String @unique
  nickName String?
  privateKey String @unique // Encrypted private key
  privateKeyIV String @unique // Encrypted private key initialization vector
  publicKey String @unique

  userId Int?
  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  messageHistory MessageHistory[]
  transactionHistory TransactionHistory[]
  transactionHistoryAsRecipient TransactionHistory[] @relation(name: "TransactionHistoryToCustodialWalletRelation")

  createdAt     DateTime          @default(now())
}


model MessageHistory {
  id Int @id @default(autoincrement())
  message String
  signature String
  signatureIV String

  custodialWalletId Int
  custodialWallet CustodialWallet @relation(fields: [custodialWalletId], references: [id], onDelete: Cascade)

  createdAt     DateTime          @default(now())
}

model TransactionHistory {
  id Int @id @default(autoincrement())

  chainId Int
  transactionHash String @unique
  nonce Int

  toAddress String
  amountInEth Decimal

  custodialWalletId Int
  custodialWallet CustodialWallet @relation(fields: [custodialWalletId], references: [id], onDelete: Cascade)

  isInternal Boolean @default(false)
  toCustodialWalletId Int?
  toCustodialWallet CustodialWallet? @relation(name: "TransactionHistoryToCustodialWalletRelation", fields: [toCustodialWalletId], references: [id])

  createdAt     DateTime          @default(now())
}